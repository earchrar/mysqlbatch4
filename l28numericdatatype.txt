=> Numberic Data Type 

    Data Type                                 Description 

        BIT(size)                                 A bit-value type, from 1 to 64. default value is 1 
                                                 (အလွန်သေးငယ်တယ် size တွေ.မှာ သုံးတယ် (eg T/F => Male (or) Female) size(1 ကနေ 64 ထိ ရှိတယ်) default value is 1)
                                                 
        BOOL                                      Zero is considered as false, Non-Zero values are considered as true 
                                                  (0 ဆိုရင် false || 0 မဟုတ်တယ်ကောင်တွေ.ဆို true) 

        BOOLEAN                                   Zero is considered as false, Non-Zero values are considered as true 
                                                  (0 ဆိုရင် false || 0 မဟုတ်တယ်ကောင်တွေ.ဆို true) 

        TINYINT(size)                             A very small integer -128 to 127, Signed range -128 to 127 , Unsigned range 0 to 255 (255 ကို 2 နဲ.စားရင် 128 Signed တွေ. ရတယ်)
                                                  (tiny အရာတွေ.ကို tinyint(size) နဲ. သုံးတယ် သူမှာ Signed နဲ. Unsigned နှစ်မျိုး ရှိတယ် => Signed ဆိုရင် (-) -128 စမယ် 127 မှာဆုံးမယ် => Unsigned ဆိုရင် (+) 0 စမယ် 255 မှာဆုံးမယ်)
                                                  
        SMALLINT(size)                            A small integer, Signed range -32768 to 32767 , Unsigned range 0 to 65535 (6kb) (65535 ကို 2 နဲ.စားရင် 32768 Signed တွေ. ရတယ်)
                                                  (small အရာတွေ.ကို smallint(size) နဲ. သုံးတယ် သူမှာ Signed နဲ. Unsigned နှစ်မျိုး ရှိတယ် => Signed ဆိုရင် (-) -32768 စမယ် 32767 မှာဆုံးမယ် => Unsigned ဆိုရင် (+) 0 စမယ် 65535(6kb) မှာဆုံးမယ်)

        MEDIUMINT(size)                           A medium integer, Signed range -8388608 to 8388607 , Unsigned range 0 to 16777215 (16mb) (16777215 ကို 2 နဲ.စားရင် 8388607 Signed တွေ. ရတယ်)
                                                  (medium အရာတွေ.ကို mediumint(size) နဲ. သုံးတယ် သူမှာ Signed နဲ. Unsigned နှစ်မျိုး ရှိတယ် => Signed ဆိုရင် (-) -8388608 စမယ် 8388607 မှာဆုံးမယ် => Unsigned ဆိုရင် (+) 0 စမယ် 16777215(6mb) မှာဆုံးမယ်)

        INT                                       Signed range -2147483648 to 2147483647 , Unsigned range 0 to 4294967295 (4gb) (2147483647 ကို 2 နဲ.စားရင် 4294967295 Signed တွေ. ရတယ်)
                                                  (int အရာတွေ.ကို int(size) နဲ. သုံးတယ် သူမှာ Signed နဲ. Unsigned နှစ်မျိုး ရှိတယ် => Signed ဆိုရင် (-) -2147483648 စမယ် 2147483647 မှာဆုံးမယ် => Unsigned ဆိုရင် (+) 0 စမယ် 4294967295(4gb) မှာဆုံးမယ်)

        INTEGER                                   Signed range -2147483648 to 2147483647 , Unsigned range 0 to 4294967295 (4gb) (2147483647 ကို 2 နဲ.စားရင် 4294967295 Signed တွေ. ရတယ်)
                                                  (integer အရာတွေ.ကို int(size) နဲ. သုံးတယ် သူမှာ Signed နဲ. Unsigned နှစ်မျိုး ရှိတယ် => Signed ဆိုရင် (-) -2147483648 စမယ် 2147483647 မှာဆုံးမယ် => Unsigned ဆိုရင် (+) 0 စမယ် 4294967295(4gb) မှာဆုံးမယ်)

        BITINT()                                  A large Integer

        DECIMAL(size,d(digit))                    fixed-point number. default value for d is 0 
                                                  eg(999.99) is 5 digit and 2 decimal DECIMAL(5,2) 

        DEC(size,d)                               fixed-point number. default value for d is 0 (200.0)
        FLOAT(size,p)                             A ploating point number (Approximate(estiable) ခန်.မှန်.ခြေ Value)
        FLOAT(p)                                  A ploating point number (Approximate Value). p is optional. p is from 0 to 24 (0 ကနေ 24 ဒသမကိန်း ပေးလို.ရမယ်)
        DOUBLE(size,p)                            A ploating point number (Approximate Value). p is optional. p is form 25 to 53 ( FLOAT ထပ်များချင်ရင် DOUBLE ဒသမကိန်းကို သုံးပါ DOUBLE 25 ကနေ 53 ထိ အများဆုံး ပေးလို. ရတယ်)

        Note : : DECIMAL for finance (such as money) 
                 FLOAT & DOUBLE for science app

        --------------------------------------------------------------------------------------------------------------------------------------------------------------

        => Exercise 

            CREATE TABLE IF NOT EXISTS items(
                name VARCHAR(20),
                price INT,
                status BOOL 
            );

            DESC items;
            SHOW CREATE TABLE items;

            INSERT INTO items(name,price)
            VALUES ('water',100),
                   ('coffee',500),
                   ('cake',500),
                   ('snack',250.56),
                   ('jam',1000);

            SELECT * FROM items;

            INSERT INTO items(name,price,status)
            VALUES ('redbull',100,0),
                   ('sponsor',500,1),
                   ('joey',800,0),
                   ('deedo',250.56,1),
                   ('cake',100.34,0);
                   
            SELECT * FROM items;

            CREATE TABLE IF NOT EXISTS proitems(
                name VARCHAR(20),
                purchaseprice INT(4) SIGNED, 
                sellprice INT(4) UNSIGNED,
                status BOOL 
            );

            DESC proitems;

            INSERT INTO proitems(name,purchaseprice,sellprice)
            VALUES ('water',9000,9500),
                   ('coffee',-100,200),
                   ('cake',800,100),
                   ('snack',-250.56,350.77),
                   ('jam',-1000,2000);

            SELECT * FROM proitems;

            INSERT INTO proitems(name,purchaseprice,sellprice)
            VALUE ('water',1000,-1100);

            SELECT * FROM proitems;     

        --------------------------------------------------------------------------------------------------------------------------------------------------------------  

            Number Data Type 
                int         fixed-point         floating-point
                integer     decimal             float/double 

            DECIMAL(5,2) 
                eg (999.99) is 5 digits and 2 decimal digit 
            
            DECIMAL(5,3) = 20.324
                           20.5 = 20.500 
                           20.52354897 = 20.524 (warning)

            CREATE TABLE IF NOT EXISTS sellitems(
                name VARCHAR(20),
                price DECIMAL(6,2)
            );

            DESC sellitems;
            SHOW CREATE TABLE sellitems;

            *Result = 100.43
            INSERT INTO sellitems(name,price)
            VALUE ('coffee',100.43);

            *Result = 1000.01
            INSERT INTO sellitems(name,price)
            VALUE ('redbull',1000.01);

            *Result = 1001.00
            INSERT INTO sellitems(name,price)
            VALUE ('sponsor',1000.9958);

            *Result = 1000.99
            INSERT INTO sellitems(name,price)
            VALUE ('sponsor',1000.9858);

            *Result = 1000.99
            INSERT INTO sellitems(name,price)
            VALUE ('sponsor',1000.9948);

            *Result = 1000.00
            INSERT INTO sellitems(name,price)
            VALUE ('sponsor',1000);

            *error
            INSERT INTO sellitems(name,price)
            VALUE ('sponsor',100000);

            SELECT * FROM sellitems;

        --------------------------------------------------------------------------------------------------------------------------------------------------------------  

        => FLOAT() vs DOUBLE() 

            => FLOAT() 

                CREATE TABLE IF NOT EXISTS shoppings(
                    name VARCHAR(20),
                    purchaseprice FLOAT,
                    sellprice FLOAT(4)
                );

                DESC shoppings;
                SHOW CREATE TABLE shoppings;

                INSERT INTO shoppings(name,purchaseprice,sellprice)
                VALUES ('redbull',100,100),
                    ('sponsor',500,500.34),
                    ('joey',800,800.56),
                    ('deedo',250,250.889),
                    ('cake',9000,10000);

                SELECT * FROM shoppings;

                *result = 112233
                INSERT INTO shoppings(name,purchaseprice,sellprice)
                VALUE ('birdnest',112233,112233.45);

                *result = 11223300
                INSERT INTO shoppings(name,purchaseprice,sellprice)
                VALUE ('water',11223344,11223344.45);

                *result = 1122330000
                INSERT INTO shoppings(name,purchaseprice,sellprice)
                VALUE ('water',1122334455.45,1122334455.45);

                SELECT * FROM shoppings;

        --------------------------------------------------------------------------------------------------------------------------------------------------------------  

            => DOUBLE()

                CREATE TABLE IF NOT EXISTS buyings(
                        name VARCHAR(20),
                        purchaseprice FLOAT,
                        sellprice DOUBLE 
                );

                DESC buyings;
                SHOW CREATE TABLE buyings;

                INSERT INTO buyings(name,purchaseprice,sellprice)
                VALUES ('redbull',100,100),
                        ('sponsor',500.34,500.34),
                        ('joey',800.56,800.56),
                        ('deedo',250.889,250.889),
                        ('cake',10000,10000);

                SELECT * FROM buyings;

                *result = 112233 , 112233.45
                INSERT INTO buyings(name,purchaseprice,sellprice)
                VALUE ('birdnest',112233,112233.45);

                *result = 11223300
                INSERT INTO buyings(name,purchaseprice,sellprice)
                VALUE ('water',11223344,11223344.45);

                *result = 1122330000 , 1122334455.45
                INSERT INTO buyings(name,purchaseprice,sellprice)
                VALUE ('water',1122334455.45,1122334455.45);

                *result = 1.12233e17 , 1.122334455667789e17
                INSERT INTO buyings(name,purchaseprice,sellprice)
                VALUE ('water',112233445566778899.45,112233445566778899.45);

                SELECT * FROM shoppings;

        --------------------------------------------------------------------------------------------------------------------------------------------------------------  
            => e/E 
                HTML input number type allow 'e/E' buz e stand for exponenital (exponent) which is a numeric symbol 
                Eg. 20000 can be wirtten as 2e5 (3e4 = 3x10^4 = 30000) / shift+6 = ^ ( call Caret or Hat )









